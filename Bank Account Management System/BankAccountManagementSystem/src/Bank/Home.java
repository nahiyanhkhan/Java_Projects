package Bank;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Nahiyan H Khan
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    String username;

    public Home() {
        initComponents();
        this.datetime();
    }

    public Home(String username) throws SQLException {
        initComponents();
        this.username = username;
        Conn c1 = new Conn();
        String query = "SELECT * FROM user_info WHERE acc_username='" + username + "'";
        ResultSet rs = c1.s.executeQuery(query);
        if (rs.next()) {
            accIdFld.setText(rs.getString("acc_id"));
            accUsernameFld.setText(rs.getString("acc_username"));
            accHolderFld.setText(rs.getString("acc_holder"));
            addressFld.setText(rs.getString("address"));
            dobFld.setText(rs.getString("birth_date"));
            genderFld.setText(rs.getString("gender"));
            balanceFld.setText(rs.getString("balance"));
        }
        
        this.datetime();
    }

    public void datetime() {
        Date d = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("dd-MMM-yyyy");
        String date = sf.format(d);

        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat sf = new SimpleDateFormat("hh:mm:ss a");
                dateFld.setText(date+" "+sf.format(d));
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        accIdFld = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        accHolderFld = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addressFld = new javax.swing.JTextField();
        balanceFld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        depositBtn = new javax.swing.JButton();
        withdrawBtn = new javax.swing.JButton();
        transferBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        accUsernameFld = new javax.swing.JTextField();
        genderFld = new javax.swing.JTextField();
        dobFld = new javax.swing.JTextField();
        passBtn = new javax.swing.JButton();
        historyBtn = new javax.swing.JButton();
        dateFld = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(400, 80));
        setPreferredSize(new java.awt.Dimension(630, 575));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("User ID : ");

        accIdFld.setEditable(false);
        accIdFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        accIdFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        accIdFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accIdFldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Account Holder : ");

        accHolderFld.setEditable(false);
        accHolderFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        accHolderFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        accHolderFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accHolderFldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Address : ");

        addressFld.setEditable(false);
        addressFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        addressFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        addressFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFldActionPerformed(evt);
            }
        });

        balanceFld.setEditable(false);
        balanceFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        balanceFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        balanceFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceFldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Current Balance : ");

        depositBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        depositBtn.setText("Deposit");
        depositBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        depositBtn.setPreferredSize(new java.awt.Dimension(75, 25));
        depositBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositBtnActionPerformed(evt);
            }
        });

        withdrawBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        withdrawBtn.setText("Withdraw");
        withdrawBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        withdrawBtn.setPreferredSize(new java.awt.Dimension(75, 25));
        withdrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawBtnActionPerformed(evt);
            }
        });

        transferBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        transferBtn.setText("Transfer");
        transferBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        transferBtn.setPreferredSize(new java.awt.Dimension(75, 25));
        transferBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferBtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Account Information");
        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Date of Birth : ");

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Gender : ");

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Username : ");

        accUsernameFld.setEditable(false);
        accUsernameFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        accUsernameFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        accUsernameFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accUsernameFldActionPerformed(evt);
            }
        });

        genderFld.setEditable(false);
        genderFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        genderFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        genderFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderFldActionPerformed(evt);
            }
        });

        dobFld.setEditable(false);
        dobFld.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        dobFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dobFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobFldActionPerformed(evt);
            }
        });

        passBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        passBtn.setText("Change Password");
        passBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        passBtn.setPreferredSize(new java.awt.Dimension(75, 25));
        passBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passBtnActionPerformed(evt);
            }
        });

        historyBtn.setFont(new java.awt.Font("Comic Sans MS", 1, 15)); // NOI18N
        historyBtn.setText("Transaction History");
        historyBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        historyBtn.setPreferredSize(new java.awt.Dimension(75, 25));
        historyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyBtnActionPerformed(evt);
            }
        });

        dateFld.setEditable(false);
        dateFld.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        dateFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateFld.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dateFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(dateFld, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addGap(5, 5, 5))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(59, 59, 59))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(accIdFld)
                                    .addComponent(accUsernameFld)
                                    .addComponent(accHolderFld)
                                    .addComponent(addressFld)
                                    .addComponent(dobFld)
                                    .addComponent(genderFld)
                                    .addComponent(balanceFld)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(depositBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(withdrawBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(transferBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(historyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(passBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dateFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accIdFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accUsernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accHolderFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dobFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(balanceFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(withdrawBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transferBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(historyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accIdFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accIdFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accIdFldActionPerformed

    private void accHolderFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accHolderFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accHolderFldActionPerformed

    private void addressFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFldActionPerformed

    private void balanceFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceFldActionPerformed

    private void withdrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawBtnActionPerformed
        String amt = JOptionPane.showInputDialog(this, "Enter the amount to withdraw :", "Withdraw", JOptionPane.PLAIN_MESSAGE);
        double amount = Double.parseDouble(amt);

        Account a = new Account();
        String temp = balanceFld.getText();
        a.setBalance(Double.parseDouble(temp));
        a.withdraw(amount);

        Conn c = new Conn();
        String query = "UPDATE user_info SET balance='" + a.getBalance() + "' WHERE acc_id=" + accIdFld.getText() + "";
        try {
            c.s.executeUpdate(query);
            balanceFld.setText(Double.toString(a.getBalance()));
            if (!balanceFld.getText().equals(temp)) {
                JOptionPane.showMessageDialog(null, "BDT " + amount + " withdrawn successfully!");
                String q = "INSERT INTO transaction values('" + accUsernameFld.getText() + "','" + dateFld.getText() + "','Withdraw','" + amount + "')";
                c.s.executeUpdate(q);
            } else {
                JOptionPane.showMessageDialog(null, "Nothing withdrawn!");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_withdrawBtnActionPerformed

    private void depositBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositBtnActionPerformed
        String amt = JOptionPane.showInputDialog(this, "Enter the amount to deposit :", "Deposit", JOptionPane.PLAIN_MESSAGE);
        double amount = Double.parseDouble(amt);

        Account a = new Account();
        String temp = balanceFld.getText();
        a.setBalance(Double.parseDouble(balanceFld.getText()));
        a.deposit(amount);

        Conn c = new Conn();
        String query = "UPDATE user_info SET balance='" + a.getBalance() + "' WHERE acc_id=" + accIdFld.getText() + "";
        try {
            c.s.executeUpdate(query);
            balanceFld.setText(Double.toString(a.getBalance()));
            if (!balanceFld.getText().equals(temp)) {
                JOptionPane.showMessageDialog(null, "BDT " + amount + " deposited successfully!");
                String q = "INSERT INTO transaction values('" + accUsernameFld.getText() + "','" + dateFld.getText() + "','Deposit','" + amount + "')";
                c.s.executeUpdate(q);
            } else {
                JOptionPane.showMessageDialog(null, "Nothing deposited!");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_depositBtnActionPerformed

    private void transferBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferBtnActionPerformed

        try {
            Conn c = new Conn();
            Account a = new Account();
            Account rec = new Account();
            String temp = balanceFld.getText();

            while (true) {
                String reciever = JOptionPane.showInputDialog(this, "Enter username of reciever's account :", "Transfer", JOptionPane.PLAIN_MESSAGE);
                if (reciever.equals(JOptionPane.CANCEL_OPTION) || reciever.equals(JOptionPane.CLOSED_OPTION)) {
                    break;
                }
                String query3 = "SELECT balance FROM user_info WHERE acc_username='" + reciever + "'";
                ResultSet rs = c.s.executeQuery(query3);
                if (rs.next()) {
                    rec.setBalance(Double.parseDouble(rs.getString("balance")));
                    rec.setUsername(reciever);
                    a.setBalance(Double.parseDouble(balanceFld.getText()));
                    String amt = JOptionPane.showInputDialog(this, "Enter the amount to transfer :", "Transfer", JOptionPane.PLAIN_MESSAGE);
                    if (amt.equals(JOptionPane.CANCEL_OPTION) || amt.equals(JOptionPane.CLOSED_OPTION)) {
                        break;
                    }
                    double amount = Double.parseDouble(amt);

                    a.transfer(rec, amount);

                    String query = "UPDATE user_info SET balance='" + a.getBalance() + "' WHERE acc_id=" + accIdFld.getText() + "";
                    String query2 = "UPDATE user_info SET balance='" + rec.getBalance() + "' WHERE acc_username='" + reciever + "'";
                    c.s.executeUpdate(query);
                    c.s.executeUpdate(query2);
                    balanceFld.setText(Double.toString(a.getBalance()));
                    if (!balanceFld.getText().equals(temp)) {
                        JOptionPane.showMessageDialog(null, "BDT " + amount + " transferred successfully!");
                        String q = "INSERT INTO transaction values('" + accUsernameFld.getText() + "','" + dateFld.getText() + "','Transfer to (" + reciever + ")','" + amount + "')";
                        c.s.executeUpdate(q);
                    } else {
                        JOptionPane.showMessageDialog(null, "Nothing transferred!");
                    }
                    break;
                } else {
                    JOptionPane.showMessageDialog(null, "Please Provide correct username!");
                }
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_transferBtnActionPerformed

    private void accUsernameFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accUsernameFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accUsernameFldActionPerformed

    private void genderFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderFldActionPerformed

    private void dobFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dobFldActionPerformed

    private void passBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passBtnActionPerformed
        new Password(username).setVisible(true);
    }//GEN-LAST:event_passBtnActionPerformed

    private void historyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyBtnActionPerformed
        new Transaction(username).setVisible(true);
    }//GEN-LAST:event_historyBtnActionPerformed

    private void dateFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accHolderFld;
    private javax.swing.JTextField accIdFld;
    private javax.swing.JTextField accUsernameFld;
    private javax.swing.JTextField addressFld;
    private javax.swing.JTextField balanceFld;
    private javax.swing.JTextField dateFld;
    private javax.swing.JButton depositBtn;
    private javax.swing.JTextField dobFld;
    private javax.swing.JTextField genderFld;
    private javax.swing.JButton historyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton passBtn;
    private javax.swing.JButton transferBtn;
    private javax.swing.JButton withdrawBtn;
    // End of variables declaration//GEN-END:variables
}
